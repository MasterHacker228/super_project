
import numpy as np
import cv2 as cv
import matplotlib.pyplot as plt
img1 = cv.imread('111111.jpg',cv.IMREAD_GRAYSCALE)          # queryImage
img2 = cv.imread('11111.jpg',cv.IMREAD_GRAYSCALE) # trainImage
# Initiate SIFT detector
# Initiate ORB detector

orb = cv.ORB_create()
# find the keypoints with ORB
kp1 = orb.detect(img1,None)
# compute the descriptors with ORB
kp1, des1 = orb.compute(img1, kp1)
# BFMatcher with default params
# find the keypoints with ORB
kp2 = orb.detect(img2,None)
# compute the descriptors with ORB
kp2, des2 = orb.compute(img2, kp2)
# BFMatcher with default params

bf = cv.BFMatcher()
matches = bf.knnMatch(des1,des2,k=2)
# Apply ratio test
good = []
for m,n in matches:
    if m.distance < 0.75*n.distance:
        good.append([m])
# cv.drawMatchesKnn expects list of lists as matches.
#print(good)
#
flags=cv.DrawMatchesFlags_NOT_DRAW_SINGLE_POINTS

img3 = cv.drawMatchesKnn(img1,kp1,img2,kp2,good,None, flags)
plt.imshow(img3),plt.show()
